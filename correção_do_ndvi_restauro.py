# -*- coding: utf-8 -*-
"""Corre√ß√£o_do_NDVI_Restauro.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10GwWXirkn9MJV65xrALhvKFGvCgipFrz

**NDVI com Google Earth Engine (Python)**

Por: Sandy dos Reis Hermann

26/05/2025

**An√°lise do monitoramento de 5 anos da cobertura vegetal em √°rea de restaura√ß√£o com uso de imagens de sat√©lite: uma abordagem usando Google Earth Engine e Google Colab.**

- Esse projeto tem como objetivo analisar por meio das geotecnologias, a cobertura vegetal da √°rea de restauro ao entorno da PCH Anhanguera, localizada no munic√≠pio de S√£o Joaquim da Barra - SP -
- Este script utiliza o Google Earth Engine para calcular o NDVI (√çndice de Vegeta√ß√£o por Diferen√ßa Normalizada) de imagens do sat√©lite Sentinel-2 na √°rea de interesse com raio de 5 km, para os anos de 2018 a 2022. Os resultados s√£o exportados automaticamente para o Google Drive.

‚úÖ Requisitos

- Conta no Google Earth Engine (https://signup.earthengine.google.com)
- Biblioteca Python 'earthengine-api' instalada
- Autentica√ß√£o feita com ee.Authenticate() e ee.Initialize()
- Permiss√£o para gravar no seu Google Drive

**Primeiro vamos criar seu proprio projeto no Google Earth Engine**

Antes de rodar o script, voc√™ precisa ter uma conta e um projeto no Google Earth Engine (GEE). Siga esses passos simples:

Crie sua conta no GEE - Acesse: https://earthengine.google.com/

* Clique em Sign Up e use sua conta Google para se cadastrar.
* Espere a aprova√ß√£o (pode levar algumas horas ou dias).

Crie um projeto no Google Cloud

* Acesse: https://console.cloud.google.com/

* Clique em Selecionar projeto > Novo projeto.

* D√™ um nome para o projeto (ex: meu-projeto-gee).

* Anote o nome do projeto, pois ele ser√° usado no script.

* Ative a API do Earth Engine no projeto

Dentro do Google Cloud, v√° em APIs e Servi√ßos > Bibliotecas.

* Procure por Earth Engine API e clique em Ativar.

Pronto para usar!

Agora, quando rodar o script, **use o nome do seu projeto no lugar de projeto-teste-sr-459612**.

Primeiro vamos importar as bibliotecas e autenticar sua conta!
"""

import ee
import geemap
import ipywidgets as widgets

"""Nessa parte vamos entrar em seu projeto do gee"""

# Autenticar e inicializar
ee.Authenticate()
ee.Initialize(project='projeto-teste-sr-459612')

"""**üåç √Årea de estudo - S√£o Joaquim da Barra**

O script define um ponto central:

Latitude: -20.51016  
Longitude: -47.85615
"""

# Localiza√ß√£o
latitude = -20.51016
longitude = -47.85615
ponto = ee.Geometry.Point([longitude, latitude])
aoi_buffer = ponto.buffer(5000)

"""Agora vamos definir fun√ß√µes de tirar nuvens, calcular ndvi por ano, os parametros de visualiza√ß√£o do mapa..."""

# Fun√ß√£o para mascarar nuvens
def maskS2clouds(image):
    qa = image.select('QA60')
    cloudBitMask = 1 << 10
    cirrusBitMask = 1 << 11
    mask = qa.bitwiseAnd(cloudBitMask).eq(0).And(
           qa.bitwiseAnd(cirrusBitMask).eq(0))
    return image.updateMask(mask).divide(10000)

# Calcular NDVI
def calc_ndvi(img):
    return img.normalizedDifference(['B8', 'B4']).rename('NDVI')

# Par√¢metros de visualiza√ß√£o
vis_ndvi = {'min': 0, 'max': 1, 'palette': ['white', 'green']}
vis_params=[vis_ndvi] * len(ndvi_images),

# Lista de anos
anos = list(range(2018, 2023))
ndvi_images = []

# Calcular NDVI m√©dio por ano
for ano in anos:
    inicio = ee.Date(f'{ano}-01-01')
    fim = ee.Date(f'{ano}-12-31')

    colecao = ee.ImageCollection('COPERNICUS/S2_SR_HARMONIZED') \
        .filterDate(inicio, fim) \
        .filterBounds(aoi_buffer) \
        .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 20)) \
        .map(maskS2clouds)

    ndvi = colecao.map(calc_ndvi).mean().clip(aoi_buffer)
    ndvi_images.append(ndvi)

# Criar mapas vinculados
geemap.linked_maps(
    rows=1,
    cols=5,
    height="400px",
    center=[latitude, longitude],
    zoom=11,
    ee_objects=ndvi_images,
    vis_params=[vis_ndvi] * len(ndvi_images),
    labels=[str(ano) for ano in anos],
    label_position="topright"
)

"""Agora vamos exportar essas imagens em uma pasta do drive"""

# Exportar as imagens NDVI m√©dias anuais para o Google Drive
for i, ano in enumerate(anos):
    tarefa = ee.batch.Export.image.toDrive(
        image=ndvi_images[i].toFloat(),
        description=f'NDVI_{ano}',
        folder='NDVI_exports',   # pasta no Drive, pode alterar ou deixar vazio para raiz
        fileNamePrefix=f'NDVI_{ano}',
        region=aoi_buffer.bounds().getInfo()['coordinates'],
        scale=10,                # resolu√ß√£o do Sentinel-2 (10m)
        crs='EPSG:4326',         # sistema de refer√™ncia
        maxPixels=1e13
    )
    tarefa.start()
    print(f'Exporta√ß√£o do NDVI do ano {ano} iniciada.')